{"ast":null,"code":"var _jsxFileName = \"/Users/ever/Desktop/goodProject/happycoding/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Contact from \"./Contacts\";\nimport contactsData from \"./Contacts.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    setContacts(contactsData);\n  }, []);\n  const handleNoteChange = (id, event) => {\n    const updatedContacts = contacts.map(contact => {\n      if (contact.id === id) {\n        return {\n          ...contact,\n          notes: event.target.value\n        };\n      }\n      return contact;\n    });\n    setContacts(updatedContacts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-5\",\n      children: \"\\uC8FC\\uC18C\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Contact, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `note-${contact.id}`,\n            className: \"form-label\",\n            children: `메모 추가하기 (${contact.firstName})`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: `note-${contact.id}`,\n            value: contact.notes,\n            onChange: event => handleNoteChange(contact.id, event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"memo\",\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Contact","contactsData","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","handleNoteChange","id","event","updatedContacts","map","contact","notes","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","firstName","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ever/Desktop/goodProject/happycoding/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Contact from \"./Contacts\";\nimport contactsData from \"./Contacts.json\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    setContacts(contactsData);\n  }, []);\n\n  const handleNoteChange = (id, event) => {\n    const updatedContacts = contacts.map((contact) => {\n      if (contact.id === id) {\n        return {\n          ...contact,\n          notes: event.target.value,\n        };\n      }\n      return contact;\n    });\n    setContacts(updatedContacts);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center mb-5\">주소록</h1>\n      <div className=\"row\">\n        {contacts.map((contact) => (\n          <div key={contact.id} className=\"col-md-4 mb-4\">\n            <Contact contact={contact} />\n            <div className=\"mb-3\">\n              <label htmlFor={`note-${contact.id}`} className=\"form-label\">\n                {`메모 추가하기 (${contact.firstName})`}\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id={`note-${contact.id}`}\n                value={contact.notes}\n                onChange={(event) => handleNoteChange(contact.id, event)}\n              />\n              <button id=\"memo\">추가</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACN,YAAY,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,KAAK,KAAK;IACtC,MAAMC,eAAe,GAAGL,QAAQ,CAACM,GAAG,CAAEC,OAAO,IAAK;MAChD,IAAIA,OAAO,CAACJ,EAAE,KAAKA,EAAE,EAAE;QACrB,OAAO;UACL,GAAGI,OAAO;UACVC,KAAK,EAAEJ,KAAK,CAACK,MAAM,CAACC;QACtB,CAAC;MACH;MACA,OAAOH,OAAO;IAChB,CAAC,CAAC;IACFN,WAAW,CAACI,eAAe,CAAC;EAC9B,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MAAIc,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzCnB,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBZ,QAAQ,CAACM,GAAG,CAAEC,OAAO,iBACpBV,OAAA;QAAsBc,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC7Cf,OAAA,CAACH,OAAO;UAACa,OAAO,EAAEA;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC7BnB,OAAA;UAAKc,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBf,OAAA;YAAOoB,OAAO,EAAG,QAAOV,OAAO,CAACJ,EAAG,EAAE;YAACQ,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxD,YAAWL,OAAO,CAACW,SAAU;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC3B,eACRnB,OAAA;YACEsB,IAAI,EAAC,MAAM;YACXR,SAAS,EAAC,cAAc;YACxBR,EAAE,EAAG,QAAOI,OAAO,CAACJ,EAAG,EAAE;YACzBO,KAAK,EAAEH,OAAO,CAACC,KAAM;YACrBY,QAAQ,EAAGhB,KAAK,IAAKF,gBAAgB,CAACK,OAAO,CAACJ,EAAE,EAAEC,KAAK;UAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACzD,eACFnB,OAAA;YAAQM,EAAE,EAAC,MAAM;YAAAS,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzB;MAAA,GAdET,OAAO,CAACJ,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAgBrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACjB,EAAA,CA7CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}