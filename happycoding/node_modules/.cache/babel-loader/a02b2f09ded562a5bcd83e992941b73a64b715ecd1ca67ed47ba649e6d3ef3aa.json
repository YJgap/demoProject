{"ast":null,"code":"var _jsxFileName = \"/Users/ever/Desktop/goodProject/happycoding/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Background from \"./Background\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5158/read\");\n        setContacts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n      }\n    };\n    fetchContacts();\n  }, []);\n  const updateContact = async (index, id, firstName, lastName, nickName, phone) => {\n    const updatedContacts = [...contacts];\n    updatedContacts[index][id] = contacts.firstName;\n    setContacts(updatedContacts);\n\n    // 서버에 업데이트된 정보를 전송합니다.\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5158/update\", {\n        id: contacts[index].id,\n        firstName: contacts[index].firstName,\n        lastName: contacts[index].lastName,\n        nickName: contacts[index].nickName,\n        phone: contacts[index].phone\n      });\n      if (!response.data.success) {\n        console.error(\"Contact update failed\");\n      }\n    } catch (error) {\n      console.error(\"Error updating contact:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-r from-green-400 to-blue-500\",\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold text-black my-8\",\n        children: \"\\uC804\\uD654\\uBC88\\uD638\\uBD80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded shadow p-6\",\n        children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-b py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"border rounded w-full py-2 px-3\",\n              value: `${contact.firstName} ${contact.lastName}`,\n              onChange: e => {\n                const [firstName, lastName] = e.target.value.split(\" \");\n                updateContact(index, \"firstName\", firstName);\n                updateContact(index, \"lastName\", lastName);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"border rounded w-full py-2 px-3\",\n              value: contact.phone,\n              onChange: e => updateContact(index, \"phone\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"border rounded w-full py-2 px-3\",\n              placeholder: \"\\uBA54\\uBAA8 \\uCD94\\uAC00\",\n              value: contact.memo,\n              onChange: e => updateContact(index, \"memo\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Background","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","fetchContacts","response","get","data","error","console","updateContact","index","id","firstName","lastName","nickName","phone","updatedContacts","post","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","contact","type","value","onChange","e","target","split","placeholder","memo","_c","$RefreshReg$"],"sources":["/Users/ever/Desktop/goodProject/happycoding/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Background from \"./Background\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5158/read\");\n        setContacts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n      }\n    };\n\n    fetchContacts();\n  }, []);\n\n  const updateContact = async (index, id, firstName, lastName, nickName, phone) => {\n    const updatedContacts = [...contacts];\n    updatedContacts[index][id] = contacts.firstName;\n    setContacts(updatedContacts);\n\n    // 서버에 업데이트된 정보를 전송합니다.\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5158/update\", {\n        id: contacts[index].id,\n        firstName: contacts[index].firstName,\n        lastName: contacts[index].lastName,\n        nickName: contacts[index].nickName,\n        phone: contacts[index].phone,\n      });\n\n      if (!response.data.success) {\n        console.error(\"Contact update failed\");\n      }\n    } catch (error) {\n      console.error(\"Error updating contact:\", error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-r from-green-400 to-blue-500\">\n      <Background />\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-4xl font-bold text-black my-8\">전화번호부</h1>\n        <div className=\"bg-white rounded shadow p-6\">\n          {contacts.map((contact, index) => (\n            <div key={contact.id} className=\"border-b py-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <input\n                  type=\"text\"\n                  className=\"border rounded w-full py-2 px-3\"\n                  value={`${contact.firstName} ${contact.lastName}`}\n                  onChange={(e) => {\n                    const [firstName, lastName] = e.target.value.split(\" \");\n                    updateContact(index, \"firstName\", firstName);\n                    updateContact(index, \"lastName\", lastName);\n                  }}\n                />\n                <input\n                  type=\"text\"\n                  className=\"border rounded w-full py-2 px-3\"\n                  value={contact.phone}\n                  onChange={(e) =>\n                    updateContact(index, \"phone\", e.target.value)\n                  }\n                />\n              </div>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  className=\"border rounded w-full py-2 px-3\"\n                  placeholder=\"메모 추가\"\n                  value={contact.memo}\n                  onChange={(e) => updateContact(index, \"memo\", e.target.value)}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}